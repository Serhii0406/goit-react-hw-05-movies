{"version":3,"file":"static/js/813.43964c90.chunk.js","mappings":"+SAEaA,EAAW,mCAAG,8FACZC,EAAAA,EAAAA,IACX,mGAFuB,mFAAH,qDAMXC,EAAc,mCAAG,WAAMC,GAAN,iFACfF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,6DADe,mFAAH,sDAMdC,EAAc,mCAAG,WAAMC,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,yHACuGI,IAFxF,mFAAH,sDAMdC,EAAe,mCAAG,WAAMH,GAAN,iFAChBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,qEADgB,mFAAH,sDAMfI,EAAe,mCAAG,WAAMJ,GAAN,iFAChBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,4EADgB,mFAAH,qD,gLCvBfK,EAAOC,EAAAA,GAAAA,KAAH,0CAIJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mVAkBVG,EAAMH,EAAAA,GAAAA,IAAH,mFAMHI,EAAWJ,EAAAA,GAAAA,IAAH,sGAMRK,EAAQL,EAAAA,GAAAA,GAAH,yFAMLM,EAAYN,EAAAA,GAAAA,GAAH,8GAOTO,GAAYP,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kDAITQ,EAAOR,EAAAA,GAAAA,GAAH,oF,kBCkCjB,EAzEqB,WAAO,IAAD,UAkBES,EAjB3B,GAAgDC,EAAAA,EAAAA,UAAS,MAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACQlB,GAAOmB,EAAAA,EAAAA,MAAPnB,GAEFoB,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAmB7C,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBzB,EAAAA,EAAAA,IAAeC,GAFtC,OAEUyB,EAFV,OAGIP,EAAoBO,EAAKA,MAH7B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAAC5B,KAQF,UAACK,EAAD,WACGY,IACC,4BACE,UAACV,EAAD,CAAYsB,GAAIT,EAAhB,WACE,SAAC,MAAD,CAAaU,KAAM,KADrB,cAIA,UAACpB,EAAD,YACE,SAACD,EAAD,CACEsB,IAAG,yCAAoCd,EAAiBe,aACxDC,IAAI,MAEN,4BACE,UAACtB,EAAD,qBACGM,EAAiBiB,aADpB,QAC6BjB,EAAiBkB,eAD9C,cAEGlB,EAAiBmB,aAAaC,MAAM,EAAG,UAF1C,QAEgD,GAFhD,QAIA,iDAEGC,KAAKC,MAAsC,GAAhCtB,EAAiBuB,qBAF/B,QAEqD,GAFrD,QAIA,SAAC5B,EAAD,wBACA,uBAAIK,EAAiBwB,YACrB,SAAC7B,EAAD,sBACA,wBA9BeG,EA8BOE,EAAiByB,OA7B/B3B,EAAI4B,KAAI,SAAAC,GAAG,OAAIC,OAAOC,OAAOF,EAAIG,MAAMC,KAAK,GAAjC,IACVA,KAAK,iBAMV/B,EAAiBjB,KA2B7B,SAACY,EAAD,sCACA,UAACE,EAAD,YACE,yBACE,SAACD,EAAD,CAAWgB,GAAG,OAAOP,MAAO,CAAEC,KAAMH,GAApC,qBAIF,yBACE,SAACP,EAAD,CAAWgB,GAAG,UAAUP,MAAO,CAAEC,KAAMH,GAAvC,2BAKJ,SAAC,EAAA6B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["Api/Api.jsx","components/MovieDetails.styled.jsx","components/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getTrending = async () => {\n  return await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=22fa368820f7f9af3c30ea0e6b34461d&page=1'\n  );\n};\n\nexport const getDetailMovie = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getSearchMovie = async query => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1&query=${query}`\n  );\n};\n\nexport const getMovieCredits = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getMovieReviews = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1`\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Main = styled.main`\n  padding: 30px;\n`;\n\nexport const GoBackLink = styled(NavLink)`\n  display: flex;\n  justify-content: | space-between;\n  background-color: #b9b9b9;\n  border: 1px solid black;\n  padding: 7px;\n  text-decoration: none;\n  color: black;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  width: 80px;\n  :hover,\n  :focus {\n    background-color: #290b78;\n    color: white;\n  }\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 250px;\n  margin-right: 20px;\n`;\n\nexport const FilmCard = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Title = styled.h1`\n  font-size: 27px;\n  font-weight: 500;\n  margin-bottom: 15px;\n`;\n\nexport const TitleItem = styled.h3`\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const LinkAbout = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const List = styled.ul`\n  padding-bottom: 15px;\n  border-bottom: 1px solid black;\n`;","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getDetailMovie } from '../Api/Api';\nimport {\n  Main,\n  GoBackLink,\n  Img,\n  FilmCard,\n  Title,\n  TitleItem,\n  LinkAbout,\n  List,\n} from './MovieDetails.styled';\nimport { BiArrowBack } from 'react-icons/bi';\n\nconst MovieDetails = () => {\n  const [movieInformation, setMovieInformation] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function trendingCatch() {\n      try {\n        const data = await getDetailMovie(id);\n        setMovieInformation(data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    trendingCatch();\n  }, [id]);\n\n  function findGenresOfMovie(all) {\n    let movieGenres = all.map(one => Object.values(one.name).join(''));\n    return movieGenres.join(', ');\n  }\n\n  return (\n    <Main>\n      {movieInformation && (\n        <div key={movieInformation.id}>\n          <GoBackLink to={backLinkHref}>\n            <BiArrowBack size={18} />\n            Go back\n          </GoBackLink>\n          <FilmCard>\n            <Img\n              src={`https://image.tmdb.org/t/p/w400${movieInformation.poster_path}`}\n              alt=\"\"\n            />\n            <div>\n              <Title>\n                {movieInformation.title ?? movieInformation.original_title}(\n                {movieInformation.release_date.slice(0, 4) ?? ''})\n              </Title>\n              <p>\n                User score:\n                {Math.round(movieInformation.vote_average * 10) ?? ''}%\n              </p>\n              <TitleItem>Overview</TitleItem>\n              <p>{movieInformation.overview}</p>\n              <TitleItem>Genres</TitleItem>\n              <p>{findGenresOfMovie(movieInformation.genres)}</p>\n            </div>\n          </FilmCard>\n        </div>\n      )}\n      <TitleItem>Additional information</TitleItem>\n      <List>\n        <li>\n          <LinkAbout to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </LinkAbout>\n        </li>\n        <li>\n          <LinkAbout to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </LinkAbout>\n        </li>\n      </List>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieDetails;"],"names":["getTrending","axios","getDetailMovie","id","getSearchMovie","query","getMovieCredits","getMovieReviews","Main","styled","GoBackLink","NavLink","Img","FilmCard","Title","TitleItem","LinkAbout","List","all","useState","movieInformation","setMovieInformation","useParams","backLinkHref","useLocation","state","from","useEffect","data","console","log","trendingCatch","to","size","src","poster_path","alt","title","original_title","release_date","slice","Math","round","vote_average","overview","genres","map","one","Object","values","name","join","Suspense","fallback"],"sourceRoot":""}