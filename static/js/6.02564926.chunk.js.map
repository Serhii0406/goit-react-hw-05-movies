{"version":3,"file":"static/js/6.02564926.chunk.js","mappings":"6SAEaA,EAAW,mCAAG,8FACZC,EAAAA,EAAAA,IACX,mGAFuB,mFAAH,qDAMXC,EAAc,mCAAG,WAAMC,GAAN,iFACfF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,6DADe,mFAAH,sDAMdC,EAAc,mCAAG,WAAMC,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,yHACuGI,IAFxF,mFAAH,sDAMdC,EAAe,mCAAG,WAAMH,GAAN,iFAChBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,qEADgB,mFAAH,sDAMfI,EAAe,mCAAG,WAAMJ,GAAN,iFAChBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,4EADgB,mFAAH,qD,wKCvBfK,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kDAITE,EAAOF,EAAAA,GAAAA,KAAH,0CAIJG,EAAOH,EAAAA,GAAAA,KAAH,gDAGJI,EAAQJ,EAAAA,GAAAA,MAAH,mHAMLK,EAASL,EAAAA,GAAAA,OAAH,sO,kBCwDnB,EAtEe,WAAO,IAAD,EACnB,GAAiCM,EAAAA,EAAAA,UAAS,IAA1C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACtCC,GAAWC,EAAAA,EAAAA,MALE,SA6BJC,EA7BI,0EA6BnB,WAA0BJ,GAA1B,iGAEuBnB,EAAAA,EAAAA,IAAemB,GAFtC,UAGoC,KAD1BK,EAFV,QAGaA,KAAKC,cAHlB,uBAIMC,EAAAA,GAAAA,KAAA,uDAJN,0BAOIX,EAAYS,EAAKA,KAAKG,SAP1B,kDASIC,QAAQC,IAAR,MATJ,0DA7BmB,wBA0CnB,OApBAC,EAAAA,EAAAA,YAAU,WACHX,GAGLI,EAAWJ,EACZ,GAAE,CAACA,KAgBF,UAACZ,EAAD,YACE,UAACC,EAAD,CAAMuB,SAjCW,SAAAC,GACnBA,EAAMC,iBACNf,EAAgC,KAAhBN,EAAqB,CAAEX,MAAOW,GAAgB,CAAC,GACpC,KAAvBA,EAAYsB,QAIhBX,EAAWJ,GACXN,EAAU,KAJRa,EAAAA,GAAAA,KAAW,4BAKd,EAwBG,WACE,SAACjB,EAAD,CACA0B,KAAK,OACHC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,SACLC,SA5Ca,SAAAR,GACnBnB,EAAUmB,EAAMS,OAAOC,MAAMC,cAC9B,EA2COD,MAAO9B,KAET,SAACF,EAAD,CAAQyB,KAAK,SAAb,wBAEF,wBACGrB,GACCA,EAAS8B,KAAI,SAAAC,GAAI,aACf,yBACE,SAACzC,EAAD,CAAW0C,GAAE,UAAKD,EAAK9C,IAAMgD,MAAO,CAAEC,KAAM3B,GAA5C,mBACGwB,EAAKI,qBADR,QACyBJ,EAAKK,kBAFvBL,EAAK9C,GADC,QAU1B,C","sources":["Api/Api.jsx","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getTrending = async () => {\n  return await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=22fa368820f7f9af3c30ea0e6b34461d&page=1'\n  );\n};\n\nexport const getDetailMovie = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getSearchMovie = async query => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1&query=${query}`\n  );\n};\n\nexport const getMovieCredits = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US`\n  );\n};\n\nexport const getMovieReviews = async id => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=22fa368820f7f9af3c30ea0e6b34461d&language=en-US&page=1`\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieItem = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const Main = styled.main`\n  padding: 30px;\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 15px;\n`;\nexport const Input = styled.input`\n  border: 2px solid black;\n  border-radius: 4px;\n  padding: 5px;\n  margin-right: 10px;\n`;\nexport const Button = styled.button`\n  background-color: #27319d;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  padding: 5px 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 14px;\n  `;","import { useState, useEffect } from 'react';\nimport { getSearchMovie } from '../Api/Api';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { MovieItem, Main, Form, Input, Button } from './Movies.styled';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchInput, setSearch] = useState('');\n  const [filmList, setFilmList] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleChange = event => {\n    setSearch(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(searchInput !== '' ? { query: searchInput } : {});\n    if (searchInput.trim() === '') {\n      toast.warn('Enter words to search for');\n      return;\n    }\n    movieCatch(search);\n    setSearch('');\n  };\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    movieCatch(search);\n  }, [search]);\n\n  async function movieCatch(search) {\n    try {\n      const data = await getSearchMovie(search);\n      if (data.data.total_results === 0) {\n        toast.warn(`Sorry! We didn't find anything, change your request`);\n        return;\n      }\n      setFilmList(data.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Main>\n      <Form onSubmit={handleSubmit}>\n        <Input\n        type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"search\"\n          onChange={handleChange}\n          value={searchInput}>\n        </Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <ul>\n        {filmList &&\n          filmList.map(film => (\n            <li key={film.id}>\n              <MovieItem to={`${film.id}`} state={{ from: location }}>\n                {film.original_name ?? film.original_title}\n              </MovieItem>\n            </li>\n          ))}\n      </ul>\n    </Main>\n  );\n};\n\nexport default Movies;"],"names":["getTrending","axios","getDetailMovie","id","getSearchMovie","query","getMovieCredits","getMovieReviews","MovieItem","styled","NavLink","Main","Form","Input","Button","useState","searchInput","setSearch","filmList","setFilmList","useSearchParams","searchParams","setSearchParams","search","get","location","useLocation","movieCatch","data","total_results","toast","results","console","log","useEffect","onSubmit","event","preventDefault","trim","type","autoComplete","autoFocus","placeholder","name","onChange","target","value","toLowerCase","map","film","to","state","from","original_name","original_title"],"sourceRoot":""}